<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>keps on Kubernetes Community</title>
    <link>/keps/</link>
    <description>Recent content in keps on Kubernetes Community</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/keps/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A community forum for Kubernetes</title>
      <link>/keps/sig-contributor-experience/0007-20180403-community-forum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-contributor-experience/0007-20180403-community-forum/</guid>
      <description>A community forum for Kubernetes Table of Contents  Table of Contents Summary Motivation  Goals Non-Goals  Proposal  User Stories [optional]  Story 1 Story 2  Implementation Details/Notes/Constraints Risks and Mitigations  Graduation Criteria Implementation History Drawbacks  Summary Kubernetes is large enough that we should take a more active role in growing our community. We need a place to call our own that can encompass users, contributors, meetups, and other groups in the community.</description>
    </item>
    
    <item>
      <title>Apply</title>
      <link>/keps/sig-api-machinery/0006-apply/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-api-machinery/0006-apply/</guid>
      <description>Apply Table of Contents  Apply  Table of Contents Summary Motivation  Goals Non-Goals  Proposal  Implementation Details/Notes/Constraints [optional] Risks and Mitigations  Graduation Criteria Implementation History Drawbacks Alternatives   Summary kubectl apply is a core part of the Kubernetes config workflow, but it is buggy and hard to fix. This functionality will be regularized and moved to the control plane.
Motivation Example problems today:
 User does POST, then changes something and applies: surprise!</description>
    </item>
    
    <item>
      <title>Cloud Provider Controller Manager</title>
      <link>/keps/sig-cloud-provider/0002-cloud-controller-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-cloud-provider/0002-cloud-controller-manager/</guid>
      <description>Remove Cloud Provider Code From Kubernetes Core Table of Contents  Remove Cloud Provider Code From Kubernetes Core  Table of Contents Summary Motivation  Goals Intermediary Goals Non-Goals  Proposal  Controller Manager Changes Kubelet Changes API Server Changes Volume Management Changes Deployment Changes Implementation Details/Notes/Constraints  Repository Requirements  Notes for Repository Requirements Repository Timeline   Security Considerations  Graduation Criteria  Graduation to Beta  Process Goals   Implementation History Alternatives   Summary We want to remove any cloud provider specific logic from the kubernetes/kubernetes repo.</description>
    </item>
    
    <item>
      <title>Cloud Provider DigitalOcean</title>
      <link>/keps/sig-cloud-provider/providers/0017-cloud-provider-digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-cloud-provider/providers/0017-cloud-provider-digitalocean/</guid>
      <description>Cloud Provider DigitalOcean Table of Contents  Table of Contents Summary Motivation  Goals Non-Goals  Requirements Proposal  Summary DigitalOcean is a cloud computing platform built for developers and businesses who want a simple way to deploy &amp;amp; manage their infrastructure. This is a KEP proposing DigitalOcean as a cloud provider within the Kubernetes ecosystem.
Motivation Goals  Supporting DigitalOcean within the Kubernetes ecosystem. This involves:  providing an open community to promote discussions for Kubernetes on DigitalOcean providing an open environment for developing Kubernetes on DigitalOcean   Non-Goals  Using the Kubernetes ecosystem/community to onboard more users onto our platform.</description>
    </item>
    
    <item>
      <title>Cloud Provider Template</title>
      <link>/keps/sig-cloud-provider/providers/0004-cloud-provider-template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-cloud-provider/providers/0004-cloud-provider-template/</guid>
      <description>Cloud Provider FooBar This is a KEP template, outlining how to propose a new cloud provider into the Kubernetes ecosystem.
Table of Contents  Table of Contents Summary Motivation  Goals Non-Goals  Requirements Proposal  Summary This is where you add a summary of your cloud provider and other additional information about your cloud provider that others may find useful.
Motivation Goals This is where you can specify any goals you may have for your cloud provider.</description>
    </item>
    
    <item>
      <title>Contributor Site</title>
      <link>/keps/sig-contributor-experience/0005-contributor-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-contributor-experience/0005-contributor-site/</guid>
      <description>Contributor Site Table of Contents  Table of Contents Summary Motivation  Goals Non-Goals  Proposal  Risks and Mitigations  Graduation Criteria Implementation History Drawbacks Alternatives  Summary We need a way to organize and publish information targeted at contributors. In order to continue to scale the Kubernetes contributor community we need a convenient, scalable and findable way to publish information.
Motivation While the current kubernetes.io site is great for end users, it isn&amp;rsquo;t often used by or aimed at project contributors.</description>
    </item>
    
    <item>
      <title>Dry-run</title>
      <link>/keps/sig-api-machinery/0015-dry-run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-api-machinery/0015-dry-run/</guid>
      <description>Kubernetes Dry-run Dry-run is a new feature that we intend to implement in the api-server. The goal is to be able to send requests to modifying endpoints, and see if the request would have succeeded (admission chain, validation, merge conflicts, &amp;hellip;) and/or what would have happened without having it actually happen. The response body for the request should be as close as possible to a non dry-run response.
Specifying dry-run Dry-run is triggered by setting the “dryRun” query parameter on modifying verbs: POST, PUT, PATCH and DELETE.</description>
    </item>
    
    <item>
      <title>Dynamic Audit Configuration</title>
      <link>/keps/sig-auth/0014-dynamic-audit-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-auth/0014-dynamic-audit-configuration/</guid>
      <description>Dynamic Audit Control Table of Contents  Dynamic Audit Control  Table of Contents Summary Motivation  Goals Non-Goals  Proposal  Dynamic Configuration Cluster Scoped Configuration User Stories Story 1 Story 2 Story 3 Implementation Details/Notes/Constraints Risks and Mitigations Privilege Escalation Webhook Authentication  Graduation Criteria Implementation History Alternatives  Generalized Dynamic Configuration    Summary We want to allow the advanced auditing features to be dynamically configured.</description>
    </item>
    
    <item>
      <title>Efficient Node Heartbeat</title>
      <link>/keps/sig-node/0009-node-heartbeat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-node/0009-node-heartbeat/</guid>
      <description>Efficient Node Heartbeats Table of Contents Table of Contents  Efficient Node Heartbeats  Table of Contents Summary Motivation  Goals Non-Goals  Proposal  Risks and Mitigations  Graduation Criteria Implementation History Alternatives  Dedicated “heartbeat” object instead of “leader election” one Events instead of dedicated heartbeat object Reuse the Component Registration mechanisms Split Node object into two parts at etcd level Delta compression in etcd Replace etcd with other database    Summary Node heartbeats are necessary for correct functioning of Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Kubernetes Enhancement Proposal Process</title>
      <link>/keps/0001-kubernetes-enhancement-proposal-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/0001-kubernetes-enhancement-proposal-process/</guid>
      <description>Kubernetes Enhancement Proposal Process Table of Contents  Kubernetes Enhancement Proposal Process  Metadata Table of Contents Summary Motivation Reference-level explanation  What type of work should be tracked by a KEP KEP Template KEP Metadata KEP Workflow Git and GitHub Implementation KEP Editor Role Important Metrics Prior Art  Graduation Criteria Drawbacks Alternatives Unresolved Questions Mentors   Summary A standardized development process for Kubernetes is proposed in order to</description>
    </item>
    
    <item>
      <title>Kustomize</title>
      <link>/keps/sig-cli/0008-kustomize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-cli/0008-kustomize/</guid>
      <description>Kustomize Table of Contents  Kustomize  Table of Contents Summary Motivation  Goals Non-Goals  Proposal  Implementation Details/Notes/Constraints [optional] Risks and Mitigations Risks of Not Having a Solution  Graduation Criteria Implementation History Drawbacks Alternatives FAQ   Summary Declarative specification of Kubernetes objects is the recommended way to manage Kubernetes production workloads, however gaps in the kubectl tooling force users to write their own scripting and tooling to augment the declarative tools with preprocessing transformations.</description>
    </item>
    
    <item>
      <title>My First KEP</title>
      <link>/keps/0000-kep-template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/0000-kep-template/</guid>
      <description>Title This is the title of the KEP. Keep it simple and descriptive. A good title can help communicate what the KEP is and should be considered as part of any review.
The filename for the KEP should include the KEP number along with the title. The title should be lowercased and spaces/punctuation should be replaced with -. As the KEP is approved and an official KEP number is allocated, the file should be renamed.</description>
    </item>
    
    <item>
      <title>Protomote sysctl annotations to fields</title>
      <link>/keps/sig-node/0008-20180430-promote-sysctl-annotations-to-fields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-node/0008-20180430-promote-sysctl-annotations-to-fields/</guid>
      <description>Promote sysctl annotations to fields Table of Contents  Promote sysctl annotations to fields  Table of Contents Summary Motivation  Promote annotations to fields Promote &amp;ndash;experimental-allowed-unsafe-sysctls kubelet flag to kubelet config api option Gate the feature  Proposal  User Stories Implementation Details/Notes/Constraints Risks and Mitigations  Graduation Criteria Implementation History   Summary Setting the sysctl parameters through annotations provided a successful story for defining better constraints of running applications.</description>
    </item>
    
    <item>
      <title>Reporting Conformance Test Results to Testgrid</title>
      <link>/keps/sig-cloud-provider/0003-testgrid-conformance-e2e/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-cloud-provider/0003-testgrid-conformance-e2e/</guid>
      <description>Reporting Conformance Test Results to Testgrid Table of Contents  Summary Motivation  Goals Non-Goals  Proposal  Implementation Details/Notes/Constraints Risks and Mitigations  Graduation Criteria Implementation History  Summary This is a KEP outlining the motivation behind why cloud providers should periodically upload E2E conformance test results to Testgrid and how a cloud provider can go about doing this.
Motivation The primary motivation behind collecting conformance test results from various cloud providers on a regular basis is to inform sig-release of any critical bugs.</description>
    </item>
    
    <item>
      <title>cloud-provider-baiducloud</title>
      <link>/keps/sig-cloud-provider/providers/cloud-provider-baiducloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/keps/sig-cloud-provider/providers/cloud-provider-baiducloud/</guid>
      <description>Cloud Provider BaiduCloud Table of Contents  Table of Contents Summary Motivation  Goals Non-Goals  Requirements Proposal  Summary Baidu is a gold member of CNCF and we have a large team working on Kubernetes and related projects like complex scheduling, heterogeneous computing, auto-scaling etc. We build cloud platform to support Baidu emerging business including autonomous driving, deep learning, blockchain by leveraging Kubernetes. We also provide public container services named cloud container engine(CCE).</description>
    </item>
    
  </channel>
</rss>